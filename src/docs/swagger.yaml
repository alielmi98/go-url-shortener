definitions:
  github_com_alielmi98_go-url-shortener_api_dto.CreateShortnUrlRequest:
    properties:
      original_url:
        type: string
    required:
    - original_url
    type: object
  github_com_alielmi98_go-url-shortener_api_dto.LoginByUsernameRequest:
    properties:
      password:
        minLength: 6
        type: string
      username:
        minLength: 5
        type: string
    required:
    - password
    - username
    type: object
  github_com_alielmi98_go-url-shortener_api_dto.RegisterUserByUsernameRequest:
    properties:
      email:
        minLength: 6
        type: string
      password:
        minLength: 6
        type: string
      username:
        minLength: 5
        type: string
    required:
    - password
    - username
    type: object
  github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse:
    properties:
      error: {}
      result: {}
      resultCode:
        $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.ResultCode'
      success:
        type: boolean
    type: object
  github_com_alielmi98_go-url-shortener_api_helper.ResultCode:
    enum:
    - 0
    - 40001
    - 40101
    - 40301
    - 40401
    - 42901
    - 42902
    - 50001
    - 50002
    - 50003
    type: integer
    x-enum-varnames:
    - Success
    - ValidationError
    - AuthError
    - ForbiddenError
    - NotFoundError
    - LimiterError
    - OtpLimiterError
    - CustomRecovery
    - InternalError
    - InvalidInputError
info:
  contact: {}
paths:
  /v1/shorten:
    post:
      consumes:
      - application/json
      description: Create shortn url
      parameters:
      - description: CreateShortnUrlRequest
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_dto.CreateShortnUrlRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "409":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
      summary: Create shortn url
      tags:
      - shortn_urls
  /v1/users/login-by-username:
    post:
      consumes:
      - application/json
      description: Login by username
      parameters:
      - description: LoginByUsernameRequest
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_dto.LoginByUsernameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "401":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
      summary: Login by username
      tags:
      - users
  /v1/users/refresh-token:
    get:
      consumes:
      - application/json
      description: Refresh token
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "401":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
      summary: Refresh token
      tags:
      - users
  /v1/users/register-by-username:
    post:
      consumes:
      - application/json
      description: Register by username
      parameters:
      - description: RegisterUserByUsernameRequest
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_dto.RegisterUserByUsernameRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "409":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
      summary: Register by username
      tags:
      - users
securityDefinitions:
  AuthBearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
