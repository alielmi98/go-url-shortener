definitions:
  github_com_alielmi98_go-url-shortener_api_dto.CreateShortnUrlRequest:
    properties:
      original_url:
        type: string
    required:
    - original_url
    type: object
  github_com_alielmi98_go-url-shortener_api_dto.UpdateShortnUrlRequest:
    properties:
      access_count:
        type: integer
      original_url:
        type: string
    required:
    - original_url
    type: object
  github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse:
    properties:
      error: {}
      result: {}
      resultCode:
        $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.ResultCode'
      success:
        type: boolean
    type: object
  github_com_alielmi98_go-url-shortener_api_helper.ResultCode:
    enum:
    - 0
    - 40001
    - 40101
    - 40301
    - 40401
    - 42901
    - 42902
    - 50001
    - 50002
    - 50003
    type: integer
    x-enum-varnames:
    - Success
    - ValidationError
    - AuthError
    - ForbiddenError
    - NotFoundError
    - LimiterError
    - OtpLimiterError
    - CustomRecovery
    - InternalError
    - InvalidInputError
info:
  contact: {}
paths:
  /v1/shorten:
    post:
      consumes:
      - application/json
      description: Create shortn url
      parameters:
      - description: CreateShortnUrlRequest
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_dto.CreateShortnUrlRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "409":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Create shortn url
      tags:
      - shortn_urls
  /v1/shorten/{id}:
    put:
      consumes:
      - application/json
      description: Update shortn url
      parameters:
      - description: ShortnUrl ID
        in: path
        name: id
        required: true
        type: integer
      - description: UpdateShortnUrlRequest
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_dto.UpdateShortnUrlRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "404":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "500":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Update shortn url
      tags:
      - shortn_urls
  /v1/shorten/{short_code}:
    delete:
      consumes:
      - application/json
      description: Delete shortn url
      parameters:
      - description: ShortnUrl ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "404":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "500":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Delete shortn url
      tags:
      - shortn_urls
    get:
      consumes:
      - application/json
      description: Redirect to original URL using short code
      parameters:
      - description: ShortnUrl Short Code
        in: path
        name: short_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Redirect
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "404":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "500":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Redirect to original URL
      tags:
      - shortn_urls
  /v1/shorten/{short_code}/stats:
    get:
      consumes:
      - application/json
      description: Get shortn url by short code
      parameters:
      - description: ShortnUrl Short Code
        in: path
        name: short_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "404":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
        "500":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_go-url-shortener_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get shortn url by short code
      tags:
      - shortn_urls
securityDefinitions:
  AuthBearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
